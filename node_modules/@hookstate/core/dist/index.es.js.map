{"version":3,"file":"index.es.js","sources":["../node_modules/tslib/tslib.es6.js","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import React from 'react';\r\n\r\n///\r\n/// EXPORTED SYMBOLS (LIBRARY INTERFACE)\r\n///\r\n\r\n/**\r\n * 'JSON path' from root of a state object to a nested property.\r\n * Return type of [StateMethod.path](#readonly-path).\r\n *\r\n * For example, an object `{ a: [{ b: 1 }, { 1000: 'value' }, '3rd'] }`,\r\n * has got the following paths pointing to existing properties:\r\n *\r\n * - `[]`\r\n * - `['a']`\r\n * - `['a', 0]`\r\n * - `['a', 0, 'b']`\r\n * - `['a', 1]`\r\n * - `['a', 1, 1000]`\r\n * - `['a', 2]`\r\n */\r\nexport type Path = ReadonlyArray<string | number>;\r\n\r\n/**\r\n * Type of an argument of [StateMethods.set](#set).\r\n * \r\n * @typeparam S Type of a value of a state\r\n */\r\nexport type SetStateAction<S> = (S | Promise<S>) | ((prevState: S) => (S | Promise<S>));\r\n\r\n/**\r\n * Type of an argument of [StateMethods.merge](#merge).\r\n * \r\n * @typeparam S Type of a value of a state\r\n */\r\nexport type SetPartialStateAction<S> =\r\n    S extends ReadonlyArray<(infer U)> ?\r\n        ReadonlyArray<U> | Record<number, U> | ((prevValue: S) => (ReadonlyArray<U> | Record<number, U>)) :\r\n    S extends object | string ? Partial<S> | ((prevValue: S) => Partial<S>) :\r\n    React.SetStateAction<S>;\r\n\r\n/**\r\n * Type of an argument of [createState](#createstate) and [useState](#usestate).\r\n * \r\n * @typeparam S Type of a value of a state\r\n */\r\nexport type SetInitialStateAction<S> = S | Promise<S> | (() => S | Promise<S>)\r\n\r\n/**\r\n * Special symbol which might be returned by onPromised callback of [StateMethods.map](#map) function.\r\n * \r\n * [Learn more...](https://hookstate.js.org/docs/asynchronous-state#executing-an-action-when-state-is-loaded)\r\n */\r\nexport const postpone = Symbol('postpone')\r\n\r\n/**\r\n * Special symbol which might be used to delete properties\r\n * from an object calling [StateMethods.set](#set) or [StateMethods.merge](#merge).\r\n * \r\n * [Learn more...](https://hookstate.js.org/docs/nested-state#deleting-existing-element)\r\n */\r\nexport const none = Symbol('none') as StateValueAtPath;\r\n\r\n/**\r\n * Return type of [StateMethods.keys](#readonly-keys).\r\n * \r\n * @typeparam S Type of a value of a state\r\n */\r\nexport type InferredStateKeysType<S> =\r\n    S extends ReadonlyArray<infer _> ? ReadonlyArray<number> :\r\n    S extends null ? undefined :\r\n    S extends object ? ReadonlyArray<keyof S> :\r\n    undefined;\r\n\r\n/**\r\n * Return type of [StateMethods.map()](#map).\r\n * \r\n * @typeparam S Type of a value of a state\r\n */\r\nexport type InferredStateOrnullType<S> =\r\n    S extends undefined ? undefined :\r\n    S extends null ? null : State<S>;\r\n\r\n/**\r\n * For plugin developers only.\r\n * An instance to manipulate the state in more controlled way.\r\n * \r\n * @typeparam S Type of a value of a state\r\n * \r\n * [Learn more...](https://hookstate.js.org/docs/writing-plugin)\r\n */\r\nexport interface PluginStateControl<S> {\r\n    /**\r\n     * Get state value, but do not leave the traces of reading it.\r\n     */\r\n    getUntracked(): S;\r\n    /**\r\n     * Set new state value, but do not trigger rerender.\r\n     * \r\n     * @param newValue new value to set to a state.\r\n     */\r\n    setUntracked(newValue: SetStateAction<S>): Path[];\r\n    /**\r\n     * Merge new state value, but do not trigger rerender.\r\n     * \r\n     * @param mergeValue new partial value to merge with the current state value and set.\r\n     */\r\n    mergeUntracked(mergeValue: SetPartialStateAction<S>): Path[];\r\n    /**\r\n     * Trigger rerender for hooked states, where values at the specified paths are used.\r\n     * \r\n     * @param paths paths of the state variables to search for being used by components and rerender\r\n     */\r\n    rerender(paths: Path[]): void;\r\n}\r\n\r\n/**\r\n * An interface to manage a state in Hookstate.\r\n * \r\n * @typeparam S Type of a value of a state\r\n */\r\nexport interface StateMethods<S> {\r\n    /**\r\n     * 'Javascript' object 'path' to an element relative to the root object\r\n     * in the state. For example:\r\n     *\r\n     * ```tsx\r\n     * const state = useState([{ name: 'First Task' }])\r\n     * state.path IS []\r\n     * state[0].path IS [0]\r\n     * state.[0].name.path IS [0, 'name']\r\n     * ```\r\n     */\r\n    readonly path: Path;\r\n\r\n    /**\r\n     * Return the keys of nested states.\r\n     * For a given state of [State](#state) type,\r\n     * `state.keys` will be structurally equal to Object.keys(state),\r\n     * with two minor difference:\r\n     * 1. if `state.value` is an array, the returned result will be\r\n     * an array of numbers, not strings like with `Object.keys`.\r\n     * 2. if `state.value` is not an object, the returned result will be undefined.\r\n     */\r\n    readonly keys: InferredStateKeysType<S>;\r\n\r\n    /**\r\n     * Unwraps and returns the underlying state value referred by\r\n     * [path](#readonly-path) of this state instance.\r\n     *\r\n     * It returns the same result as [StateMethods.get](#get) method.\r\n     *\r\n     * This property is more useful than [get](#get) method for the cases,\r\n     * when a value may hold null or undefined values.\r\n     * Typescript compiler does not handle elimination of undefined with get(),\r\n     * like in the following examples, but value does:\r\n     *\r\n     * ```tsx\r\n     * const state = useState<number | undefined>(0)\r\n     * const myvalue: number = state.value\r\n     *      ? state.value + 1\r\n     *      : 0; // <-- compiles\r\n     * const myvalue: number = state.get()\r\n     *      ? state.get() + 1\r\n     *      : 0; // <-- does not compile\r\n     * ```\r\n     */\r\n    readonly value: S;\r\n\r\n    /**\r\n     * True if state value is not yet available (eg. equal to a promise)\r\n     */\r\n    readonly promised: boolean;\r\n    \r\n    /**\r\n     * If a state was set to a promise and the promise was rejected,\r\n     * this property will return the error captured from the promise rejection\r\n     */\r\n    readonly error: StateErrorAtRoot | undefined;\r\n    \r\n    /**\r\n     * Unwraps and returns the underlying state value referred by\r\n     * [path](#readonly-path) of this state instance.\r\n     *\r\n     * It returns the same result as [StateMethods.value](#readonly-value) method.\r\n     */\r\n    get(): S;\r\n    \r\n    /**\r\n     * Sets new value for a state.\r\n     * If `this.path === []`,\r\n     * it is similar to the `setState` variable returned by `React.useState` hook.\r\n     * If `this.path !== []`, it sets only the segment of the state value, pointed out by the path.\r\n     * Unlike [merge](#merge) method, this method will not accept partial updates.\r\n     * Partial updates can be also done by walking the nested states and setting those.\r\n     *\r\n     * @param newValue new value to set to a state.\r\n     * It can be a value, a promise resolving to a value\r\n     * (only if [this.path](#readonly-path) is `[]`),\r\n     * or a function returning one of these.\r\n     * The function receives the current state value as an argument.\r\n     */\r\n    set(newValue: SetStateAction<S>): void;\r\n    \r\n    /**\r\n     * Similarly to [set](#set) method updates state value.\r\n     *\r\n     * - If current state value is an object, it does partial update for the object.\r\n     * - If state value is an array and the argument is an array too,\r\n     * it concatenates the current value with the value of the argument and sets it to the state.\r\n     * - If state value is an array and the `merge` argument is an object,\r\n     * it does partial update for the current array value.\r\n     * - If current state value is a string, it concatenates the current state\r\n     * value with the argument converted to string and sets the result to the state.\r\n     */\r\n    merge(newValue: SetPartialStateAction<S>): void;\r\n    \r\n    /**\r\n     * Returns nested state by key.\r\n     * `state.nested('myprop')` returns the same as `state.myprop` or `state['myprop']`,\r\n     * but also works for properties, which names collide with names of state methods.\r\n     * \r\n     * [Learn more about nested states...](https://hookstate.js.org/docs/nested-state)\r\n     * \r\n     * @param key child property name or index\r\n     */\r\n    nested<K extends keyof S>(key: K): State<S[K]>;\r\n    \r\n    /**\r\n     * Runs the provided action callback with optimised re-rendering.\r\n     * Updating state within a batch action does not trigger immediate rerendering.\r\n     * Instead, all required rerendering is done once the batch is finished.\r\n     * \r\n     * [Learn more about batching...](https://hookstate.js.org/docs/performance-batched-updates\r\n     * \r\n     * @param action callback function to execute in a batch\r\n     * \r\n     * @param context custom user's value, which is passed to plugins\r\n     */\r\n    batch<R, C>(\r\n        action: (s: State<S>) => R,\r\n        context?: Exclude<C, Function>\r\n    ): R;\r\n\r\n    /**\r\n     * If state value is null or undefined, returns state value.\r\n     * Otherwise, it returns this state instance but\r\n     * with null and undefined removed from the type parameter.\r\n     * \r\n     * [Learn more...](https://hookstate.js.org/docs/nullable-state)\r\n     */\r\n    ornull: InferredStateOrnullType<S>;\r\n\r\n    /**\r\n     * Adds plugin to the state.\r\n     * \r\n     * [Learn more...](https://hookstate.js.org/docs/extensions-overview)\r\n     */\r\n    attach(plugin: () => Plugin): State<S>\r\n    \r\n    /**\r\n     * For plugin developers only.\r\n     * It is a method to get the instance of the previously attached plugin.\r\n     * If a plugin has not been attached to a state,\r\n     * it returns an Error as the first element.\r\n     * A plugin may trhow an error to indicate that plugin has not been attached.\r\n     * \r\n     * [Learn more...](https://hookstate.js.org/docs/writing-plugin)\r\n     */\r\n    attach(pluginId: symbol): [PluginCallbacks | Error, PluginStateControl<S>]\r\n}\r\n\r\n/**\r\n * Mixin for the [StateMethods](#interfacesstatemethodsmd) for a [State](#state),\r\n * which can be destroyed by a client.\r\n */\r\nexport interface StateMethodsDestroy {\r\n    /**\r\n     * Destroys an instance of a state, so\r\n     * it can clear the allocated native resources (if any)\r\n     * and can not be used anymore after it has been destroyed.\r\n     */\r\n    destroy(): void;\r\n}\r\n\r\n/**\r\n * Type of a result of [createState](#createstate) and [useState](#usestate) functions\r\n * \r\n * @typeparam S Type of a value of a state\r\n * \r\n * [Learn more about global states...](https://hookstate.js.org/docs/global-state)\r\n * [Learn more about local states...](https://hookstate.js.org/docs/local-state)\r\n * [Learn more about nested states...](https://hookstate.js.org/docs/nested-state)\r\n */\r\nexport type State<S> = StateMethods<S> & (\r\n    S extends ReadonlyArray<(infer U)> ? ReadonlyArray<State<U>> :\r\n    S extends object ? Omit<\r\n        { readonly [K in keyof Required<S>]: State<S[K]>; },\r\n        keyof StateMethods<S> | keyof StateMethodsDestroy\r\n    > : {}\r\n);\r\n\r\n/**\r\n * For plugin developers only.\r\n * Type alias to highlight the places where we are dealing with root state value.\r\n *\r\n * @hidden\r\n * @ignore\r\n */\r\nexport type StateValueAtRoot = any; //tslint:disable-line: no-any\r\n/**\r\n * For plugin developers only.\r\n * Type alias to highlight the places where we are dealing with nested state value.\r\n *\r\n * @hidden\r\n * @ignore\r\n */\r\nexport type StateValueAtPath = any; //tslint:disable-line: no-any\r\n/**\r\n * For plugin developers only.\r\n * Type alias to highlight the places where we are dealing with state error.\r\n *\r\n * @hidden\r\n * @ignore\r\n */\r\nexport type StateErrorAtRoot = any; //tslint:disable-line: no-any\r\n/**\r\n * For plugin developers only.\r\n * Type alias to highlight the places where we are dealing with context value.\r\n *\r\n * @hidden\r\n * @ignore\r\n */\r\nexport type AnyContext = any; //tslint:disable-line: no-any\r\n\r\n/**\r\n * For plugin developers only.\r\n * PluginCallbacks.onSet argument type.\r\n */\r\nexport interface PluginCallbacksOnSetArgument {\r\n    readonly path: Path,\r\n    readonly state?: StateValueAtRoot,\r\n    /**\r\n     * **A note about previous values and merging:**\r\n     * State values are muteable in Hookstate for performance reasons. This causes a side effect in the merge operation.\r\n     * While merging, the previous state object is mutated as the desired changes are applied. This means the value of\r\n     * `previous` will reflect the merged changes as well, matching the new `state` value rather than the previous\r\n     * state value. As a result, the `previous` property is unreliable when merge is used. The\r\n     * [merged](#optional-readonly-merged) property can be used to detect which values were merged in but it will not\r\n     * inform you whether those values are different from the previous state.\r\n     *\r\n     * As a workaround, you can [batch state updates](https://hookstate.js.org/docs/performance-batched-updates) or\r\n     * replace merge calls with the immutable-style set operation like so:\r\n     *\r\n     * ```\r\n     * state.set(p => {\r\n     *     let copy = p.clone(); /// here it is up to you to define how to clone the current state\r\n     *     copy.field = 'new value for field';\r\n     *     delete copy.fieldToDelete;\r\n     *     return copy;\r\n     * })\r\n     * ```\r\n     */\r\n    readonly previous?: StateValueAtPath,\r\n    readonly value?: StateValueAtPath,\r\n    readonly merged?: StateValueAtPath,\r\n}\r\n\r\n/**\r\n * For plugin developers only.\r\n * PluginCallbacks.onDestroy argument type.\r\n */\r\nexport interface PluginCallbacksOnDestroyArgument {\r\n    readonly state?: StateValueAtRoot,\r\n}\r\n\r\n/**\r\n * For plugin developers only.\r\n * PluginCallbacks.onBatchStart/Finish argument type.\r\n */\r\nexport interface PluginCallbacksOnBatchArgument {\r\n    readonly path: Path,\r\n    readonly state?: StateValueAtRoot,\r\n    readonly context?: AnyContext,\r\n}\r\n\r\n/**\r\n * For plugin developers only.\r\n * Set of callbacks, a plugin may subscribe to.\r\n * \r\n * [Learn more...](https://hookstate.js.org/docs/writing-plugin)\r\n */\r\nexport interface PluginCallbacks {\r\n    readonly onSet?: (arg: PluginCallbacksOnSetArgument) => void,\r\n    readonly onDestroy?: (arg: PluginCallbacksOnDestroyArgument) => void,\r\n    readonly onBatchStart?: (arg: PluginCallbacksOnBatchArgument) => void,\r\n    readonly onBatchFinish?: (arg: PluginCallbacksOnBatchArgument) => void,\r\n};\r\n\r\n/**\r\n * For plugin developers only.\r\n * Hookstate plugin specification and factory method.\r\n * \r\n * [Learn more...](https://hookstate.js.org/docs/writing-plugin)\r\n */\r\nexport interface Plugin {\r\n    /**\r\n     * Unique identifier of a plugin.\r\n     */\r\n    readonly id: symbol;\r\n    /**\r\n     * Initializer for a plugin when it is attached for the first time.\r\n     */\r\n    readonly init?: (state: State<StateValueAtRoot>) => PluginCallbacks;\r\n}\r\n\r\n/**\r\n * Creates new state and returns it.\r\n *\r\n * You can create as many global states as you need.\r\n *\r\n * When you the state is not needed anymore,\r\n * it should be destroyed by calling\r\n * `destroy()` method of the returned instance.\r\n * This is necessary for some plugins,\r\n * which allocate native resources,\r\n * like subscription to databases, broadcast channels, etc.\r\n * In most cases, a global state is used during\r\n * whole life time of an application and would not require\r\n * destruction. However, if you have got, for example,\r\n * a catalog of dynamically created and destroyed global states,\r\n * the states should be destroyed as advised above.\r\n *\r\n * @param initial Initial value of the state.\r\n * It can be a value OR a promise,\r\n * which asynchronously resolves to a value,\r\n * OR a function returning a value or a promise.\r\n *\r\n * @typeparam S Type of a value of the state\r\n *\r\n * @returns [State](#state) instance,\r\n * which can be used directly to get and set state value\r\n * outside of React components.\r\n * When you need to use the state in a functional `React` component,\r\n * pass the created state to [useState](#usestate) function and\r\n * use the returned result in the component's logic.\r\n */\r\nexport function createState<S>(\r\n    initial: SetInitialStateAction<S>\r\n): State<S> & StateMethodsDestroy {\r\n    const methods = createStore(initial).toMethods();\r\n    const devtools = createState[DevToolsID]\r\n    if (devtools) {\r\n        methods.attach(devtools)\r\n    }\r\n    return methods.self as State<S> & StateMethodsDestroy;\r\n}\r\n\r\n/**\r\n * Enables a functional React component to use a state,\r\n * either created by [createState](#createstate) (*global* state) or\r\n * derived from another call to [useState](#usestate) (*scoped* state).\r\n *\r\n * The `useState` forces a component to rerender every time, when:\r\n * - a segment/part of the state data is updated *AND only if*\r\n * - this segment was **used** by the component during or after the latest rendering.\r\n *\r\n * For example, if the state value is `{ a: 1, b: 2 }` and\r\n * a component uses only `a` property of the state, it will rerender\r\n * only when the whole state object is updated or when `a` property is updated.\r\n * Setting the state value/property to the same value is also considered as an update.\r\n *\r\n * A component can use one or many states,\r\n * i.e. you may call `useState` multiple times for multiple states.\r\n *\r\n * The same state can be used by multiple different components.\r\n *\r\n * @param source a reference to the state to hook into\r\n *\r\n * The `useState` is a hook and should follow React's rules of hooks.\r\n *\r\n * @returns an instance of [State](#state),\r\n * which **must be** used within the component (during rendering\r\n * or in effects) or it's children.\r\n */\r\nexport function useState<S>(\r\n    source: State<S>\r\n): State<S>;\r\n/**\r\n * This function enables a functional React component to use a state,\r\n * created per component by [useState](#usestate) (*local* state).\r\n * In this case `useState` behaves similarly to `React.useState`,\r\n * but the returned instance of [State](#state)\r\n * has got more features.\r\n *\r\n * When a state is used by only one component, and maybe it's children,\r\n * it is recommended to use *local* state instead of *global*,\r\n * which is created by [createState](#createstate).\r\n *\r\n * *Local* (per component) state is created when a component is mounted\r\n * and automatically destroyed when a component is unmounted.\r\n *\r\n * The same as with the usage of a *global* state,\r\n * `useState` forces a component to rerender when:\r\n * - a segment/part of the state data is updated *AND only if*\r\n * - this segment was **used** by the component during or after the latest rendering.\r\n *\r\n * You can use as many local states within the same component as you need.\r\n *\r\n * @param source An initial value state.\r\n *\r\n * @returns an instance of [State](#state),\r\n * which **must be** used within the component (during rendering\r\n * or in effects) or it's children.\r\n */\r\nexport function useState<S>(\r\n    source: SetInitialStateAction<S>\r\n): State<S>;\r\nexport function useState<S>(\r\n    source: SetInitialStateAction<S> | State<S>\r\n): State<S> {\r\n    return useHookstate(source as State<S>);\r\n}\r\n\r\n/**\r\n * Alias to [useState](#usestate) which provides a workaround\r\n * for [React 20613 bug](https://github.com/facebook/react/issues/20613)\r\n */\r\nexport function useHookstate<S>(\r\n    source: State<S>\r\n): State<S>;\r\n/**\r\n * Alias to [useState](#usestate) which provides a workaround\r\n * for [React 20613 bug](https://github.com/facebook/react/issues/20613)\r\n */\r\nexport function useHookstate<S>(\r\n    source: SetInitialStateAction<S>\r\n): State<S>;\r\nexport function useHookstate<S>(\r\n    source: SetInitialStateAction<S> | State<S>\r\n): State<S> {\r\n    const parentMethods = typeof source === 'object' && source !== null ?\r\n        source[self] as StateMethodsImpl<S> | undefined :\r\n        undefined;\r\n    if (parentMethods) {\r\n        if (parentMethods.isMounted) {\r\n            // Scoped state mount\r\n            // eslint-disable-next-line react-hooks/rules-of-hooks\r\n            const [, setValue] = React.useState({});\r\n            return useSubscribedStateMethods<S>(\r\n                parentMethods.state,\r\n                parentMethods.path,\r\n                () => setValue({}),\r\n                parentMethods).self;\r\n        } else {\r\n            // Global state mount or destroyed link\r\n            // eslint-disable-next-line react-hooks/rules-of-hooks\r\n            const [value, setValue] = React.useState({ state: parentMethods.state });\r\n            let state =  useSubscribedStateMethods<StateValueAtRoot>(\r\n                value.state,\r\n                RootPath,\r\n                () => setValue({ state: value.state }),\r\n                value.state).self;\r\n            for (let ind = 0; ind < parentMethods.path.length; ind += 1) {\r\n                state = state.nested(parentMethods.path[ind]);\r\n            }\r\n            return state as State<S>;\r\n        }\r\n    } else {\r\n        // Local state mount\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        const [value, setValue] = React.useState(() => ({ state: createStore(source) }));\r\n        const result = useSubscribedStateMethods<S>(\r\n            value.state,\r\n            RootPath,\r\n            () => setValue({ state: value.state }),\r\n            value.state);\r\n\r\n        if (isDevelopmentMode) {\r\n            // This is a workaround for the issue:\r\n            // https://github.com/avkonst/hookstate/issues/109\r\n            // See technical notes on React behavior here:\r\n            // https://github.com/apollographql/apollo-client/issues/5870#issuecomment-689098185\r\n            const isEffectExecutedAfterRender = React.useRef(false);\r\n            isEffectExecutedAfterRender.current = false; // not yet...\r\n            \r\n            React.useEffect(() => {\r\n                isEffectExecutedAfterRender.current = true; // ... and now, yes!\r\n                // The state is not destroyed intentionally\r\n                // under hot reload case.\r\n                return () => { isEffectExecutedAfterRender.current && value.state.destroy() }\r\n            });\r\n        } else {\r\n            React.useEffect(() => () => value.state.destroy(), []);\r\n        }\r\n        const devtools = useState[DevToolsID]\r\n        if (devtools) {\r\n            result.attach(devtools)\r\n        }\r\n        return result.self;\r\n    }\r\n}\r\n\r\n/**\r\n * Allows to use a state without defining a functional react component.\r\n * It can be also used in class-based React components. It is also\r\n * particularly useful for creating *scoped* states.\r\n *\r\n * [Learn more...](https://hookstate.js.org/docs/using-without-statehook)\r\n * \r\n * @typeparam S Type of a value of a state\r\n */\r\nexport function StateFragment<S>(\r\n    props: {\r\n        state: State<S>,\r\n        children: (state: State<S>) => React.ReactElement,\r\n    }\r\n): React.ReactElement;\r\n/**\r\n * Allows to use a state without defining a functional react component.\r\n * See more at [StateFragment](#statefragment)\r\n * \r\n * [Learn more...](https://hookstate.js.org/docs/using-without-statehook)\r\n * \r\n * @typeparam S Type of a value of a state\r\n */\r\nexport function StateFragment<S>(\r\n    props: {\r\n        state: SetInitialStateAction<S>,\r\n        children: (state: State<S>) => React.ReactElement,\r\n    }\r\n): React.ReactElement;\r\nexport function StateFragment<S>(\r\n    props: {\r\n        state: State<S> | SetInitialStateAction<S>,\r\n        children: (state: State<S>) => React.ReactElement,\r\n    }\r\n): React.ReactElement {\r\n    const scoped = useState(props.state as State<S>);\r\n    return props.children(scoped);\r\n}\r\n\r\n/**\r\n * A plugin which allows to opt-out from usage of Javascript proxies for\r\n * state usage tracking. It is useful for performance tuning.\r\n * \r\n * [Learn more...](https://hookstate.js.org/docs/performance-managed-rendering#downgraded-plugin)\r\n */\r\nexport function Downgraded(): Plugin { // tslint:disable-line: function-name\r\n    return {\r\n        id: DowngradedID\r\n    }\r\n}\r\n\r\n/**\r\n * For plugin developers only.\r\n * Reserved plugin ID for developers tools extension.\r\n *\r\n * @hidden\r\n * @ignore\r\n */\r\nexport const DevToolsID = Symbol('DevTools');\r\n\r\n/**\r\n * Return type of [DevTools](#devtools).\r\n */\r\nexport interface DevToolsExtensions {\r\n    /**\r\n     * Assigns custom label to identify the state in the development tools\r\n     * @param name label for development tools\r\n     */\r\n    label(name: string): void;\r\n    /**\r\n     * Logs to the development tools\r\n     */\r\n    log(str: string, data?: any): void;    // tslint:disable-line: no-any\r\n}\r\n\r\n/**\r\n * Returns access to the development tools for a given state.\r\n * Development tools are delivered as optional plugins.\r\n * You can activate development tools from `@hookstate/devtools`package,\r\n * for example. If no development tools are activated,\r\n * it returns an instance of dummy tools, which do nothing, when called.\r\n * \r\n * [Learn more...](https://hookstate.js.org/docs/devtools)\r\n * \r\n * @param state A state to relate to the extension.\r\n * \r\n * @returns Interface to interact with the development tools for a given state.\r\n * \r\n * @typeparam S Type of a value of a state\r\n */\r\nexport function DevTools<S>(state: State<S>): DevToolsExtensions {\r\n    const plugin = state.attach(DevToolsID);\r\n    if (plugin[0] instanceof Error) {\r\n        return EmptyDevToolsExtensions;\r\n    }\r\n    return plugin[0] as DevToolsExtensions;\r\n}\r\n\r\n///\r\n/// INTERNAL SYMBOLS (LIBRARY IMPLEMENTATION)\r\n///\r\n\r\nconst isDevelopmentMode = typeof process === 'object' && \r\n    typeof process.env === 'object' &&\r\n    process.env.NODE_ENV === 'development'\r\n\r\nconst self = Symbol('self')\r\n\r\nconst EmptyDevToolsExtensions: DevToolsExtensions = {\r\n    label() { /* */ },\r\n    log() { /* */ }\r\n}\r\n\r\nenum ErrorId {\r\n    InitStateToValueFromState = 101,\r\n    SetStateToValueFromState = 102,\r\n    GetStateWhenPromised = 103,\r\n    SetStateWhenPromised = 104,\r\n    SetStateNestedToPromised = 105,\r\n    SetStateWhenDestroyed = 106,\r\n    ToJson_Value = 108,\r\n    ToJson_State = 109,\r\n    GetUnknownPlugin = 120,\r\n\r\n    SetProperty_State = 201,\r\n    SetProperty_Value = 202,\r\n    SetPrototypeOf_State = 203,\r\n    SetPrototypeOf_Value = 204,\r\n    PreventExtensions_State = 205,\r\n    PreventExtensions_Value = 206,\r\n    DefineProperty_State = 207,\r\n    DefineProperty_Value = 208,\r\n    DeleteProperty_State = 209,\r\n    DeleteProperty_Value = 210,\r\n    Construct_State = 211,\r\n    Construct_Value = 212,\r\n    Apply_State = 213,\r\n    Apply_Value = 214,\r\n}\r\n\r\nclass StateInvalidUsageError extends Error {\r\n    constructor(path: Path, id: ErrorId, details?: string) {\r\n        super(`Error: HOOKSTATE-${id} [path: /${path.join('/')}${details ? `, details: ${details}` : ''}]. ` +\r\n            `See https://hookstate.js.org/docs/exceptions#hookstate-${id}`)\r\n    }\r\n}\r\n\r\ninterface Subscriber {\r\n    onSet(paths: Path[], actions: (() => void)[]): void;\r\n}\r\n\r\ninterface Subscribable {\r\n    subscribe(l: Subscriber): void;\r\n    unsubscribe(l: Subscriber): void;\r\n}\r\n\r\nfunction isNoProxyInitializer() {\r\n    try {\r\n        const used = new Proxy({}, {});\r\n        return false;\r\n    } catch (e) {\r\n        return true;\r\n    }\r\n};\r\nconst IsNoProxy = isNoProxyInitializer()\r\n\r\nconst DowngradedID = Symbol('Downgraded');\r\nconst SelfMethodsID = Symbol('ProxyMarker');\r\n\r\nconst RootPath: Path = [];\r\nconst DestroyedEdition = -1\r\n\r\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\r\n\r\nclass Store implements Subscribable {\r\n    private _edition = 0;\r\n\r\n    private _subscribers: Set<Subscriber> = new Set();\r\n    private _setSubscribers: Set<Required<PluginCallbacks>['onSet']> = new Set();\r\n    private _destroySubscribers: Set<Required<PluginCallbacks>['onDestroy']> = new Set();\r\n    private _batchStartSubscribers: Set<Required<PluginCallbacks>['onBatchStart']> = new Set();\r\n    private _batchFinishSubscribers: Set<Required<PluginCallbacks>['onBatchFinish']> = new Set();\r\n\r\n    private _plugins: Map<symbol, PluginCallbacks> = new Map();\r\n\r\n    private _promised?: Promised;\r\n\r\n    private _batches = 0;\r\n    private _batchesPendingPaths?: Path[];\r\n    private _batchesPendingActions?: (() => void)[];\r\n\r\n    constructor(private _value: StateValueAtRoot) {\r\n        if (typeof _value === 'object' &&\r\n            Promise.resolve(_value) === _value) {\r\n            this._promised = this.createPromised(_value)\r\n            this._value = none\r\n        } else if (_value === none) {\r\n            this._promised = this.createPromised(undefined)\r\n        }\r\n    }\r\n\r\n    createPromised(newValue: StateValueAtPath | undefined) {\r\n        const promised = new Promised(\r\n            newValue ? Promise.resolve(newValue) : undefined,\r\n            (r: StateValueAtPath) => {\r\n                if (this.promised === promised && this.edition !== DestroyedEdition) {\r\n                    this._promised = undefined\r\n                    this.set(RootPath, r, undefined)\r\n                    this.update([RootPath])\r\n                }\r\n            },\r\n            () => {\r\n                if (this.promised === promised && this.edition !== DestroyedEdition) {\r\n                    this._edition += 1\r\n                    this.update([RootPath])\r\n                }\r\n            },\r\n            () => {\r\n                if (this._batchesPendingActions &&\r\n                    this._value !== none &&\r\n                    this.edition !== DestroyedEdition) {\r\n                    const actions = this._batchesPendingActions\r\n                    this._batchesPendingActions = undefined\r\n                    actions.forEach(a => a())\r\n                }\r\n            }\r\n        );\r\n        return promised;\r\n    }\r\n\r\n    get edition() {\r\n        return this._edition;\r\n    }\r\n\r\n    get promised() {\r\n        return this._promised;\r\n    }\r\n\r\n    get(path: Path) {\r\n        let result = this._value;\r\n        if (result === none) {\r\n            return result;\r\n        }\r\n        path.forEach(p => {\r\n            result = result[p];\r\n        });\r\n        return result;\r\n    }\r\n\r\n    set(path: Path, value: StateValueAtPath, mergeValue: Partial<StateValueAtPath> | undefined): Path {\r\n        if (this._edition < 0) {\r\n            throw new StateInvalidUsageError(path, ErrorId.SetStateWhenDestroyed)\r\n        }\r\n\r\n        if (path.length === 0) {\r\n            // Root value UPDATE case,\r\n\r\n            const onSetArg: Writeable<PluginCallbacksOnSetArgument> = {\r\n                path: path,\r\n                state: value,\r\n                value: value,\r\n                previous: this._value,\r\n                merged: mergeValue\r\n            }\r\n            if (value === none) {\r\n                this._promised = this.createPromised(undefined)\r\n                delete onSetArg.value\r\n                delete onSetArg.state\r\n            } else if (typeof value === 'object' && Promise.resolve(value) === value) {\r\n                this._promised = this.createPromised(value)\r\n                value = none\r\n                delete onSetArg.value\r\n                delete onSetArg.state\r\n            } else if (this._promised && (!this._promised.resolver && !this._promised.fullfilled)) {\r\n                throw new StateInvalidUsageError(path, ErrorId.SetStateWhenPromised)\r\n            }\r\n\r\n            let prevValue = this._value;\r\n            if (prevValue === none) {\r\n                delete onSetArg.previous\r\n            }\r\n            this._value = value;\r\n            this.afterSet(onSetArg)\r\n\r\n            if (prevValue === none && this._value !== none &&\r\n                this.promised && this.promised.resolver) {\r\n                this.promised.resolver(this._value)\r\n            }\r\n\r\n            return path;\r\n        }\r\n\r\n        if (typeof value === 'object' && Promise.resolve(value) === value) {\r\n            throw new StateInvalidUsageError(path, ErrorId.SetStateNestedToPromised)\r\n        }\r\n\r\n        let target = this._value;\r\n        for (let i = 0; i < path.length - 1; i += 1) {\r\n            target = target[path[i]];\r\n        }\r\n\r\n        const p = path[path.length - 1]\r\n        if (p in target) {\r\n            if (value !== none) {\r\n                // Property UPDATE case\r\n                let prevValue = target[p]\r\n                target[p] = value;\r\n                this.afterSet({\r\n                    path: path,\r\n                    state: this._value,\r\n                    value: value,\r\n                    previous: prevValue,\r\n                    merged: mergeValue\r\n                })\r\n\r\n                return path;\r\n            } else {\r\n                // Property DELETE case\r\n                let prevValue = target[p]\r\n                if (Array.isArray(target) && typeof p === 'number') {\r\n                    target.splice(p, 1)\r\n                } else {\r\n                    delete target[p]\r\n                }\r\n                this.afterSet({\r\n                    path: path,\r\n                    state: this._value,\r\n                    previous: prevValue,\r\n                    merged: mergeValue\r\n                })\r\n\r\n                // if an array of objects is about to loose existing property\r\n                // we consider it is the whole object is changed\r\n                // which is identified by upper path\r\n                return path.slice(0, -1)\r\n            }\r\n        }\r\n\r\n        if (value !== none) {\r\n            // Property INSERT case\r\n            target[p] = value;\r\n            this.afterSet({\r\n                path: path,\r\n                state: this._value,\r\n                value: value,\r\n                merged: mergeValue\r\n            })\r\n\r\n            // if an array of objects is about to be extended by new property\r\n            // we consider it is the whole object is changed\r\n            // which is identified by upper path\r\n            return path.slice(0, -1)\r\n        }\r\n\r\n        // Non-existing property DELETE case\r\n        // no-op\r\n        return path;\r\n    }\r\n\r\n    update(paths: Path[]) {\r\n        if (this._batches) {\r\n            this._batchesPendingPaths = this._batchesPendingPaths || []\r\n            this._batchesPendingPaths = this._batchesPendingPaths.concat(paths)\r\n            return;\r\n        }\r\n\r\n        const actions: (() => void)[] = [];\r\n        this._subscribers.forEach(s => s.onSet(paths, actions));\r\n        actions.forEach(a => a());\r\n    }\r\n\r\n    afterSet(params: PluginCallbacksOnSetArgument) {\r\n        if (this._edition !== DestroyedEdition) {\r\n            this._edition += 1;\r\n            this._setSubscribers.forEach(cb => cb(params))\r\n        }\r\n    }\r\n\r\n    startBatch(path: Path, options?: { context?:  AnyContext }): void {\r\n        this._batches += 1\r\n\r\n        const cbArgument: Writeable<PluginCallbacksOnBatchArgument> = {\r\n            path: path\r\n        }\r\n        if (options && 'context' in options) {\r\n            cbArgument.context = options.context\r\n        }\r\n        if (this._value !== none) {\r\n            cbArgument.state = this._value\r\n        }\r\n        this._batchStartSubscribers.forEach(cb => cb(cbArgument))\r\n    }\r\n\r\n    finishBatch(path: Path, options?: { context?:  AnyContext }): void {\r\n        const cbArgument: Writeable<PluginCallbacksOnBatchArgument> = {\r\n            path: path\r\n        }\r\n        if (options && 'context' in options) {\r\n            cbArgument.context = options.context\r\n        }\r\n        if (this._value !== none) {\r\n            cbArgument.state = this._value\r\n        }\r\n        this._batchFinishSubscribers.forEach(cb => cb(cbArgument))\r\n\r\n        this._batches -= 1\r\n        if (this._batches === 0) {\r\n            if (this._batchesPendingPaths) {\r\n                const paths = this._batchesPendingPaths\r\n                this._batchesPendingPaths = undefined\r\n                this.update(paths)\r\n            }\r\n        }\r\n    }\r\n\r\n    postponeBatch(action: () => void): void {\r\n        this._batchesPendingActions = this._batchesPendingActions || []\r\n        this._batchesPendingActions.push(action)\r\n    }\r\n\r\n    getPlugin(pluginId: symbol) {\r\n        return this._plugins.get(pluginId)\r\n    }\r\n\r\n    register(plugin: Plugin) {\r\n        const existingInstance = this._plugins.get(plugin.id)\r\n        if (existingInstance) {\r\n            return;\r\n        }\r\n\r\n        const pluginCallbacks = plugin.init ? plugin.init(this.toMethods().self) : {};\r\n        this._plugins.set(plugin.id, pluginCallbacks);\r\n        if (pluginCallbacks.onSet) {\r\n            this._setSubscribers.add((p) => pluginCallbacks.onSet!(p))\r\n        }\r\n        if (pluginCallbacks.onDestroy) {\r\n            this._destroySubscribers.add((p) => pluginCallbacks.onDestroy!(p))\r\n        }\r\n        if (pluginCallbacks.onBatchStart) {\r\n            this._batchStartSubscribers.add((p) => pluginCallbacks.onBatchStart!(p))\r\n        }\r\n        if (pluginCallbacks.onBatchFinish) {\r\n            this._batchFinishSubscribers.add((p) => pluginCallbacks.onBatchFinish!(p))\r\n        }\r\n    }\r\n\r\n    toMethods() {\r\n        return new StateMethodsImpl<StateValueAtRoot>(\r\n            this,\r\n            RootPath,\r\n            this.get(RootPath),\r\n            this.edition,\r\n            OnSetUsedNoAction\r\n        )\r\n    }\r\n\r\n    subscribe(l: Subscriber) {\r\n        this._subscribers.add(l);\r\n    }\r\n\r\n    unsubscribe(l: Subscriber) {\r\n        this._subscribers.delete(l);\r\n    }\r\n\r\n    destroy() {\r\n        this._destroySubscribers.forEach(cb => cb(this._value !== none ? { state: this._value } : {}))\r\n        this._edition = DestroyedEdition\r\n    }\r\n\r\n    toJSON() {\r\n        throw new StateInvalidUsageError(RootPath, ErrorId.ToJson_Value);\r\n    }\r\n}\r\n\r\nclass Promised {\r\n    public fullfilled?: true;\r\n    public error?: StateErrorAtRoot;\r\n    public resolver?: (_: StateValueAtRoot) => void;\r\n\r\n    constructor(public promise: Promise<StateValueAtPath> | undefined,\r\n        onResolve: (r: StateValueAtPath) => void,\r\n        onReject: () => void,\r\n        onPostResolve: () => void) {\r\n        if (!promise) {\r\n            promise = new Promise<StateValueAtRoot>(resolve => {\r\n                this.resolver = resolve;\r\n            })\r\n        }\r\n        this.promise = promise\r\n            .then(r => {\r\n                this.fullfilled = true\r\n                if (!this.resolver) {\r\n                    onResolve(r)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.fullfilled = true\r\n                this.error = err\r\n                onReject()\r\n            })\r\n            .then(() => onPostResolve())\r\n    }\r\n}\r\n\r\n// use symbol property to allow for easier reference finding\r\nconst ValueUnusedMarker = Symbol('ValueUnusedMarker');\r\n\r\nfunction OnSetUsedNoAction() { /** no action callback */ }\r\n\r\n// use symbol to mark that a function has no effect anymore\r\nconst UnmountedMarker = Symbol('UnmountedMarker');\r\nOnSetUsedNoAction[UnmountedMarker] = true\r\n\r\nclass StateMethodsImpl<S> implements StateMethods<S>, StateMethodsDestroy, Subscribable, Subscriber {\r\n    private subscribers: Set<Subscriber> | undefined;\r\n\r\n    private isDowngraded: boolean | undefined;\r\n    private childrenCache: Record<string | number, StateMethodsImpl<StateValueAtPath>> | undefined;\r\n    private selfCache: State<S> | undefined;\r\n    private valueCache: StateValueAtPath = ValueUnusedMarker;\r\n    \r\n    constructor(\r\n        public readonly state: Store,\r\n        public readonly path: Path,\r\n        private valueSource: S,\r\n        private valueEdition: number,\r\n        private readonly onSetUsed: () => void\r\n    ) { }\r\n\r\n    getUntracked(allowPromised?: boolean) {\r\n        if (this.valueEdition !== this.state.edition) {\r\n            this.valueSource = this.state.get(this.path)\r\n            this.valueEdition = this.state.edition\r\n\r\n            if (this.isMounted) {\r\n                // this link is still mounted to a component\r\n                // populate cache again to ensure correct tracking of usage\r\n                // when React scans which states to rerender on update\r\n                if (this.valueCache !== ValueUnusedMarker) {\r\n                    this.valueCache = ValueUnusedMarker\r\n                    this.get(true) // renew cache to keep it marked used\r\n                }\r\n            } else {\r\n                // This link is not mounted to a component\r\n                // for example, it might be global link or\r\n                // a link which has been discarded after rerender\r\n                // but still captured by some callback or an effect.\r\n                // If we are here and if it was mounted before,\r\n                // it means it has not been garbage collected\r\n                // when a component unmounted.\r\n                // We take this opportunity to clean up caches\r\n                // to avoid memory leaks via stale children states cache.\r\n                this.valueCache = ValueUnusedMarker\r\n                delete this.childrenCache\r\n                delete this.selfCache\r\n            }\r\n        }\r\n        if (this.valueSource === none && !allowPromised) {\r\n            if (this.state.promised && this.state.promised.error) {\r\n                throw this.state.promised.error;\r\n            }\r\n            throw new StateInvalidUsageError(this.path, ErrorId.GetStateWhenPromised)\r\n        }\r\n        return this.valueSource;\r\n    }\r\n\r\n    get(allowPromised?: boolean) {\r\n        const currentValue = this.getUntracked(allowPromised)\r\n        if (this.valueCache === ValueUnusedMarker) {\r\n            if (this.isDowngraded) {\r\n                this.valueCache = currentValue;\r\n            } else if (Array.isArray(currentValue)) {\r\n                this.valueCache = this.valueArrayImpl(currentValue as unknown as StateValueAtPath[]);\r\n            } else if (typeof currentValue === 'object' && currentValue !== null) {\r\n                this.valueCache = this.valueObjectImpl(currentValue as unknown as object);\r\n            } else {\r\n                this.valueCache = currentValue;\r\n            }\r\n        }\r\n        return this.valueCache as S;\r\n    }\r\n\r\n    get value(): S {\r\n        return this.get()\r\n    }\r\n\r\n    setUntracked(newValue: SetStateAction<S>, mergeValue?: Partial<StateValueAtPath>): [Path] {\r\n        if (typeof newValue === 'function') {\r\n            newValue = (newValue as ((prevValue: S) => S))(this.getUntracked());\r\n        }\r\n        if (typeof newValue === 'object' && newValue !== null && newValue[SelfMethodsID]) {\r\n            throw new StateInvalidUsageError(this.path, ErrorId.SetStateToValueFromState)\r\n        }\r\n        return [this.state.set(this.path, newValue, mergeValue)];\r\n    }\r\n\r\n    set(newValue: SetStateAction<S>) {\r\n        this.state.update(this.setUntracked(newValue));\r\n    }\r\n\r\n    mergeUntracked(sourceValue: SetPartialStateAction<S>): Path[] {\r\n        const currentValue = this.getUntracked()\r\n        if (typeof sourceValue === 'function') {\r\n            sourceValue = (sourceValue as Function)(currentValue);\r\n        }\r\n\r\n        let updatedPaths: [Path];\r\n        let deletedOrInsertedProps = false\r\n\r\n        if (Array.isArray(currentValue)) {\r\n            if (Array.isArray(sourceValue)) {\r\n                return this.setUntracked(currentValue.concat(sourceValue) as unknown as S, sourceValue)\r\n            } else {\r\n                const deletedIndexes: number[] = []\r\n                Object.keys(sourceValue).sort().forEach(i => {\r\n                    const index = Number(i);\r\n                    const newPropValue = sourceValue[index]\r\n                    if (newPropValue === none) {\r\n                        deletedOrInsertedProps = true\r\n                        deletedIndexes.push(index)\r\n                    } else {\r\n                        deletedOrInsertedProps = deletedOrInsertedProps || !(index in currentValue);\r\n                        (currentValue as StateValueAtPath[])[index] = newPropValue\r\n                    }\r\n                });\r\n                // indexes are ascending sorted as per above\r\n                // so, delete one by one from the end\r\n                // this way index positions do not change\r\n                deletedIndexes.reverse().forEach(p => {\r\n                    (currentValue as unknown as []).splice(p, 1)\r\n                })\r\n                updatedPaths = this.setUntracked(currentValue, sourceValue)\r\n            }\r\n        } else if (typeof currentValue === 'object' && currentValue !== null) {\r\n            Object.keys(sourceValue).forEach(key => {\r\n                const newPropValue = sourceValue[key]\r\n                if (newPropValue === none) {\r\n                    deletedOrInsertedProps = true\r\n                    delete currentValue[key]\r\n                } else {\r\n                    deletedOrInsertedProps = deletedOrInsertedProps || !(key in currentValue)\r\n                    currentValue[key] = newPropValue\r\n                }\r\n            })\r\n            updatedPaths = this.setUntracked(currentValue, sourceValue)\r\n        } else if (typeof currentValue === 'string') {\r\n            return this.setUntracked((currentValue + String(sourceValue)) as unknown as S, sourceValue)\r\n        } else {\r\n            return this.setUntracked(sourceValue as S)\r\n        }\r\n\r\n        if (updatedPaths.length !== 1 || updatedPaths[0] !== this.path || deletedOrInsertedProps) {\r\n            return updatedPaths\r\n        }\r\n        const updatedPath = updatedPaths[0]\r\n        return Object.keys(sourceValue).map(p => updatedPath.slice().concat(p))\r\n    }\r\n\r\n    merge(sourceValue: SetPartialStateAction<S>) {\r\n        this.state.update(this.mergeUntracked(sourceValue));\r\n    }\r\n\r\n    nested<K extends keyof S>(key: K): State<S[K]> {\r\n        return this.child(key as string | number).self as State<S[K]>\r\n    }\r\n    \r\n    rerender(paths: Path[]) {\r\n        this.state.update(paths)\r\n    }\r\n\r\n    destroy(): void {\r\n        this.state.destroy()\r\n    }\r\n\r\n    subscribe(l: Subscriber) {\r\n        if (this.subscribers === undefined) {\r\n            this.subscribers = new Set();\r\n        }\r\n        this.subscribers.add(l);\r\n    }\r\n\r\n    unsubscribe(l: Subscriber) {\r\n        this.subscribers!.delete(l);\r\n    }\r\n    \r\n    get isMounted(): boolean {\r\n        return !this.onSetUsed[UnmountedMarker]\r\n    }\r\n\r\n    onUnmount() {\r\n        this.onSetUsed[UnmountedMarker] = true\r\n    }\r\n\r\n    onSet(paths: Path[], actions: (() => void)[]): boolean {\r\n        const update = () => {\r\n            if (this.isDowngraded && this.valueCache !== ValueUnusedMarker) {\r\n                actions.push(this.onSetUsed);\r\n                return true;\r\n            }\r\n            for (let path of paths) {\r\n                const firstChildKey = path[this.path.length];\r\n                if (firstChildKey === undefined) {\r\n                    if (this.valueCache !== ValueUnusedMarker) {\r\n                        actions.push(this.onSetUsed);\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    const firstChildValue = this.childrenCache && this.childrenCache[firstChildKey];\r\n                    if (firstChildValue && firstChildValue.onSet(paths, actions)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        const updated = update();\r\n        if (!updated && this.subscribers !== undefined) {\r\n            this.subscribers.forEach(s => {\r\n                s.onSet(paths, actions)\r\n            })\r\n        }\r\n        return updated;\r\n    }\r\n\r\n    get keys(): InferredStateKeysType<S> {\r\n        const value = this.get()\r\n        if (Array.isArray(value)) {\r\n            return Object.keys(value).map(i => Number(i)).filter(i => Number.isInteger(i)) as\r\n                unknown as InferredStateKeysType<S>;\r\n        }\r\n        if (typeof value === 'object' && value !== null) {\r\n            return Object.keys(value) as unknown as InferredStateKeysType<S>;\r\n        }\r\n        return undefined as InferredStateKeysType<S>;\r\n    }\r\n\r\n    child(key: number | string) {\r\n        // if this state is not mounted to a hook,\r\n        // we do not cache children to avoid unnecessary memory leaks\r\n        if (this.isMounted) {\r\n            this.childrenCache = this.childrenCache || {};\r\n            const cachehit = this.childrenCache[key];\r\n            if (cachehit) {\r\n                return cachehit;\r\n            }\r\n        }\r\n        const r = new StateMethodsImpl(\r\n            this.state,\r\n            this.path.slice().concat(key),\r\n            this.valueSource[key],\r\n            this.valueEdition,\r\n            this.onSetUsed,\r\n        )\r\n        if (this.isDowngraded) {\r\n            r.isDowngraded = true;\r\n        }\r\n        if (this.childrenCache) {\r\n            this.childrenCache[key] = r;\r\n        }\r\n        return r;\r\n    }\r\n    \r\n    private valueArrayImpl(currentValue: StateValueAtPath[]): S {\r\n        if (IsNoProxy) {\r\n            this.isDowngraded = true\r\n            return currentValue as unknown as S;\r\n        }\r\n        return proxyWrap(this.path, currentValue,\r\n            () => currentValue,\r\n            (target: object, key: PropertyKey) => {\r\n                if (key === 'length') {\r\n                    return (target as []).length;\r\n                }\r\n                if (key in Array.prototype) {\r\n                    return Array.prototype[key];\r\n                }\r\n                if (key === SelfMethodsID) {\r\n                    return this;\r\n                }\r\n                if (typeof key === 'symbol') {\r\n                    // allow clients to associate hidden cache with state values\r\n                    return target[key];\r\n                }\r\n                const index = Number(key);\r\n                if (!Number.isInteger(index)) {\r\n                    return undefined;\r\n                }\r\n                return this.child(index).get();\r\n            },\r\n            (target: object, key: PropertyKey, value: StateValueAtPath) => {\r\n                if (typeof key === 'symbol') {\r\n                    // allow clients to associate hidden cache with state values\r\n                    target[key] = value;\r\n                    return true;\r\n                }\r\n                throw new StateInvalidUsageError(this.path, ErrorId.SetProperty_Value)\r\n            },\r\n            true\r\n        ) as unknown as S;\r\n    }\r\n\r\n    private valueObjectImpl(currentValue: object): S {\r\n        if (IsNoProxy) {\r\n            this.isDowngraded = true\r\n            return currentValue as unknown as S;\r\n        }\r\n        return proxyWrap(this.path, currentValue,\r\n            () => currentValue,\r\n            (target: object, key: PropertyKey) => {\r\n                if (key === SelfMethodsID) {\r\n                    return this;\r\n                }\r\n                if (typeof key === 'symbol') {\r\n                    // allow clients to associate hidden cache with state values\r\n                    return target[key];\r\n                }\r\n                return this.child(key).get();\r\n            },\r\n            (target: object, key: PropertyKey, value: StateValueAtPath) => {\r\n                if (typeof key === 'symbol') {\r\n                    // allow clients to associate hidden cache with state values\r\n                    target[key] = value;\r\n                    return true;\r\n                }\r\n                throw new StateInvalidUsageError(this.path, ErrorId.SetProperty_Value)\r\n            },\r\n            true\r\n        ) as unknown as S;\r\n    }\r\n\r\n    get self(): State<S> {\r\n        if (this.selfCache) {\r\n            return this.selfCache\r\n        }\r\n        \r\n        const getter = (_: object, key: PropertyKey) => {\r\n            if (key === self) {\r\n                return this\r\n            }\r\n            if (typeof key === 'symbol') {\r\n                return undefined\r\n            }\r\n            if (key === 'toJSON') {\r\n                throw new StateInvalidUsageError(this.path, ErrorId.ToJson_State);\r\n            }\r\n            \r\n            let nestedGetter = (prop: PropertyKey) => {\r\n                const currentDowngraded = this.isDowngraded; // relevant for IE11 only\r\n                const currentValue = this.get(); // IE11 marks this as downgraded\r\n                this.isDowngraded = currentDowngraded; // relevant for IE11 only\r\n                if (// if currentValue is primitive type\r\n                    (typeof currentValue !== 'object' || currentValue === null) &&\r\n                    // if promised, it will be none\r\n                    currentValue !== none) {\r\n                    // This was an error case, but various tools like webpack bundler\r\n                    // and react dev tools attempt to get props out of non-null object,\r\n                    // so this was changed to return just undefined for any property request\r\n                    // as there is no way to fix 3rd party tools.\r\n                    // Logging a warning to console is also not an option\r\n                    // as it pollutes console for legitimate apps on app start app.\r\n                    // Ref: https://github.com/avkonst/hookstate/issues/125\r\n                    return undefined\r\n                }\r\n\r\n                if (Array.isArray(currentValue)) {\r\n                    if (prop === 'length') {\r\n                        return currentValue.length;\r\n                    }\r\n                    if (prop in Array.prototype) {\r\n                        return Array.prototype[prop];\r\n                    }\r\n                    const index = Number(prop);\r\n                    if (!Number.isInteger(index)) {\r\n                        return undefined;\r\n                    }\r\n                    return this.nested(index as keyof S)\r\n                }\r\n                return this.nested(prop.toString() as keyof S)\r\n            }\r\n\r\n            switch (key) {\r\n                case 'path':\r\n                    return this.path\r\n                case 'keys':\r\n                    return this.keys\r\n                case 'value':\r\n                    return this.value\r\n                case 'ornull':\r\n                    return this.ornull\r\n                case 'promised':\r\n                    return this.promised\r\n                case 'error':\r\n                    return this.error\r\n                case 'get':\r\n                    return () => this.get()\r\n                case 'set':\r\n                    return (p: SetStateAction<S>) => this.set(p)\r\n                case 'merge':\r\n                    return (p: SetPartialStateAction<S>) => this.merge(p)\r\n                case 'nested':\r\n                    return (p: keyof S) => nestedGetter(p)\r\n                case 'batch':\r\n                    // tslint:disable-next-line: no-any\r\n                    return <R, C>(action: () => R, context: Exclude<C, Function>) => this.batch(action, context)\r\n                case 'attach':\r\n                    return (p: symbol) => this.attach(p)\r\n                case 'destroy':\r\n                    return () => this.destroy()\r\n                default:\r\n                    return nestedGetter(key)\r\n            }\r\n        }\r\n        \r\n        if (IsNoProxy) {\r\n            // minimal support for IE11\r\n            const result = (Array.isArray(this.valueSource) ? [] : {}) as State<S>;\r\n            [self, 'toJSON', 'path', 'keys', 'value', 'ornull',\r\n                'promised', 'error', 'get', 'set', 'merge',\r\n                'nested', 'batch', 'attach', 'destroy']\r\n            .forEach(key => {\r\n                Object.defineProperty(result, key, {\r\n                    get: () => getter(result, key)\r\n                })\r\n            })\r\n            if (typeof this.valueSource === 'object' && this.valueSource !== null) {\r\n                Object.keys(this.valueSource).forEach(key => {\r\n                    Object.defineProperty(result, key, {\r\n                        enumerable: true,\r\n                        get: () => getter(result, key)\r\n                    })\r\n                })\r\n            }\r\n            this.selfCache = result;\r\n            return this.selfCache\r\n        }\r\n        \r\n        this.selfCache = proxyWrap(this.path, this.valueSource,\r\n            () => {\r\n                this.get() // get latest & mark used\r\n                return this.valueSource\r\n            },\r\n            getter,\r\n            (_, key, value) => {\r\n                throw new StateInvalidUsageError(this.path, ErrorId.SetProperty_State)\r\n            },\r\n            false) as unknown as State<S>;\r\n        return this.selfCache\r\n    }\r\n    \r\n    get promised(): boolean {\r\n        const currentValue = this.get(true) // marks used\r\n        if (currentValue === none && this.state.promised && !this.state.promised.fullfilled) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get error(): StateErrorAtRoot | undefined {\r\n        const currentValue = this.get(true) // marks used\r\n        if (currentValue === none) {\r\n            if (this.state.promised && this.state.promised.fullfilled) {\r\n                return this.state.promised.error;\r\n            }\r\n            this.get() // will throw 'read while promised' exception\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    batch<R, C>(\r\n        action: (s: State<S>) => R,\r\n        context?: Exclude<C, Function>\r\n    ): R {\r\n        const opts = { context: context }\r\n        try {\r\n            this.state.startBatch(this.path, opts)\r\n            const result = action(this.self) as R\r\n            if (result as unknown as Symbol === postpone) {\r\n                this.state.postponeBatch(() => this.batch(action, context))\r\n            }\r\n            return result\r\n        } finally {\r\n            this.state.finishBatch(this.path, opts)\r\n        }\r\n    }\r\n\r\n    get ornull(): InferredStateOrnullType<S> {\r\n        const value = this.get()\r\n        if (value === null || value === undefined) {\r\n            return value as unknown as InferredStateOrnullType<S>;\r\n        }\r\n        return this.self as InferredStateOrnullType<S>;\r\n    }\r\n\r\n    attach(plugin: () => Plugin): State<S>\r\n    attach(pluginId: symbol): [PluginCallbacks | Error, PluginStateControl<S>]\r\n    attach(p: (() => Plugin) | symbol):\r\n        State<S> | [PluginCallbacks | Error, PluginStateControl<S>] {\r\n        if (typeof p === 'function') {\r\n            const pluginMeta = p();\r\n            if (pluginMeta.id === DowngradedID) {\r\n                this.isDowngraded = true;\r\n                if (this.valueCache !== ValueUnusedMarker) {\r\n                    const currentValue = this.getUntracked(true);\r\n                    this.valueCache = currentValue;\r\n                }\r\n                return this.self;\r\n            }\r\n            this.state.register(pluginMeta);\r\n            return this.self;\r\n        } else {\r\n            return [\r\n                this.state.getPlugin(p) ||\r\n                    (new StateInvalidUsageError(this.path, ErrorId.GetUnknownPlugin, p.toString())), \r\n                this\r\n            ];\r\n        }\r\n    }\r\n}\r\n\r\nfunction proxyWrap(\r\n    path: Path,\r\n    // tslint:disable-next-line: no-any\r\n    targetBootstrap: any,\r\n    // tslint:disable-next-line: no-any\r\n    targetGetter: () => any,\r\n    // tslint:disable-next-line: no-any\r\n    propertyGetter: (unused: any, key: PropertyKey) => any,\r\n    // tslint:disable-next-line: no-any\r\n    propertySetter: (unused: any, p: PropertyKey, value: any, receiver: any) => boolean,\r\n    isValueProxy: boolean\r\n) {\r\n    const onInvalidUsage = (op: ErrorId) => {\r\n        throw new StateInvalidUsageError(path, op)\r\n    }\r\n    if (typeof targetBootstrap !== 'object' || targetBootstrap === null) {\r\n        targetBootstrap = {}\r\n    }\r\n    return new Proxy(targetBootstrap, {\r\n        getPrototypeOf: (target) => {\r\n            // should satisfy the invariants:\r\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getPrototypeOf#Invariants\r\n            const targetReal = targetGetter()\r\n            if (targetReal === undefined || targetReal === null) {\r\n                return null;\r\n            }\r\n            return Object.getPrototypeOf(targetReal);\r\n        },\r\n        setPrototypeOf: (target, v) => {\r\n            return onInvalidUsage(isValueProxy ?\r\n                ErrorId.SetPrototypeOf_State :\r\n                ErrorId.SetPrototypeOf_Value)\r\n        },\r\n        isExtensible: (target) => {\r\n            // should satisfy the invariants:\r\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/isExtensible#Invariants\r\n            return true; // required to satisfy the invariants of the getPrototypeOf\r\n            // return Object.isExtensible(target);\r\n        },\r\n        preventExtensions: (target) => {\r\n            return onInvalidUsage(isValueProxy ?\r\n                ErrorId.PreventExtensions_State :\r\n                ErrorId.PreventExtensions_Value)\r\n        },\r\n        getOwnPropertyDescriptor: (target, p) => {\r\n            const targetReal = targetGetter()\r\n            if (targetReal === undefined || targetReal === null) {\r\n                return undefined;\r\n            }\r\n            const origin = Object.getOwnPropertyDescriptor(targetReal, p);\r\n            if (origin && Array.isArray(targetReal) && p in Array.prototype) {\r\n                return origin;\r\n            }\r\n            return origin && {\r\n                configurable: true, // JSON.stringify() does not work for an object without it\r\n                enumerable: origin.enumerable,\r\n                get: () => propertyGetter(targetReal, p),\r\n                set: undefined\r\n            };\r\n        },\r\n        has: (target, p) => {\r\n            if (typeof p === 'symbol') {\r\n                return false;\r\n            }\r\n            const targetReal = targetGetter()\r\n            if (typeof targetReal === 'object' && targetReal !== null) {\r\n                return p in targetReal;\r\n            }\r\n            return false;\r\n        },\r\n        get: propertyGetter,\r\n        set: propertySetter,\r\n        deleteProperty: (target, p) => {\r\n            return onInvalidUsage(isValueProxy ?\r\n                ErrorId.DeleteProperty_State :\r\n                ErrorId.DeleteProperty_Value)\r\n        },\r\n        defineProperty: (target, p, attributes) => {\r\n            return onInvalidUsage(isValueProxy ?\r\n                ErrorId.DefineProperty_State :\r\n                ErrorId.DefineProperty_Value)\r\n        },\r\n        ownKeys: (target) => {\r\n            const targetReal = targetGetter()\r\n            if (Array.isArray(targetReal)) {\r\n                return Object.keys(targetReal).concat('length');\r\n            }\r\n            if (targetReal === undefined || targetReal === null) {\r\n                return [];\r\n            }\r\n            return Object.keys(targetReal);\r\n        },\r\n        apply: (target, thisArg, argArray?) => {\r\n            return onInvalidUsage(isValueProxy ?\r\n                ErrorId.Apply_State:\r\n                ErrorId.Apply_Value)\r\n        },\r\n        construct: (target, argArray, newTarget?) => {\r\n            return onInvalidUsage(isValueProxy ?\r\n                ErrorId.Construct_State :\r\n                ErrorId.Construct_Value)\r\n        }\r\n    });\r\n}\r\n\r\nfunction createStore<S>(initial: SetInitialStateAction<S>): Store {\r\n    let initialValue: S | Promise<S> = initial as (S | Promise<S>);\r\n    if (typeof initial === 'function') {\r\n        initialValue = (initial as (() => S | Promise<S>))();\r\n    }\r\n    if (typeof initialValue === 'object' && initialValue !== null && initialValue[SelfMethodsID]) {\r\n        throw new StateInvalidUsageError(RootPath, ErrorId.InitStateToValueFromState)\r\n    }\r\n    return new Store(initialValue);\r\n}\r\n\r\n// Do not try to use useLayoutEffect if DOM not available (SSR)\r\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\r\n\r\nfunction useSubscribedStateMethods<S>(\r\n    state: Store,\r\n    path: Path,\r\n    update: () => void,\r\n    subscribeTarget: Subscribable\r\n) {\r\n    const link = new StateMethodsImpl<S>(\r\n        state,\r\n        path,\r\n        state.get(path),\r\n        state.edition,\r\n        update,\r\n    );\r\n    // useLayoutEffect here instead of useEffect because of this issue:\r\n    // https://github.com/avkonst/hookstate/issues/165#issuecomment-824670930\r\n    // and very likely this issue:\r\n    // https://github.com/avkonst/hookstate/issues/186\r\n    // and probably this issue:\r\n    // https://github.com/avkonst/hookstate/issues/145\r\n    // useIsomorphicLayout for below issue when page is SSR\r\n    // https://github.com/avkonst/hookstate/issues/223\r\n    useIsomorphicLayoutEffect(() => {\r\n        subscribeTarget.subscribe(link);\r\n        return () => {\r\n            link.onUnmount()\r\n            subscribeTarget.unsubscribe(link);\r\n        }\r\n    });\r\n    return link;\r\n}\r\n"],"names":[],"mappings":"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"}